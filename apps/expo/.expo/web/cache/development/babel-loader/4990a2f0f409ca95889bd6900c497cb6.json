{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FlashList } from \"@shopify/flash-list\";\nimport { trpc } from \"../utils/trpc\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PostCard = function PostCard(_ref) {\n  var post = _ref.post;\n  return _jsxs(View, {\n    className: \"p-4 border-2 border-gray-500 rounded-lg\",\n    children: [_jsx(Text, {\n      className: \"text-xl font-semibold text-gray-800\",\n      children: post.title\n    }), _jsx(Text, {\n      className: \"text-gray-600\",\n      children: post.content\n    })]\n  });\n};\nvar CreatePost = function CreatePost() {\n  var utils = trpc.useContext();\n  var _trpc$post$create$use = trpc.post.create.useMutation({\n      onSuccess: function () {\n        var _onSuccess = _asyncToGenerator(function* () {\n          yield utils.post.all.invalidate();\n        });\n        function onSuccess() {\n          return _onSuccess.apply(this, arguments);\n        }\n        return onSuccess;\n      }()\n    }),\n    mutate = _trpc$post$create$use.mutate;\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    title = _React$useState2[0],\n    onChangeTitle = _React$useState2[1];\n  var _React$useState3 = React.useState(\"\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    content = _React$useState4[0],\n    onChangeContent = _React$useState4[1];\n  return _jsxs(View, {\n    className: \"p-4 border-t-2 border-gray-500 flex flex-col\",\n    children: [_jsx(TextInput, {\n      className: \"border-2 border-gray-500 rounded p-2 mb-2\",\n      onChangeText: onChangeTitle,\n      placeholder: \"Title\"\n    }), _jsx(TextInput, {\n      className: \"border-2 border-gray-500 rounded p-2 mb-2\",\n      onChangeText: onChangeContent,\n      placeholder: \"Content\"\n    }), _jsx(TouchableOpacity, {\n      className: \"bg-indigo-500 rounded p-2\",\n      onPress: function onPress() {\n        mutate({\n          title: title,\n          content: content\n        });\n      },\n      children: _jsx(Text, {\n        className: \"text-white font-semibold\",\n        children: \"Publish post\"\n      })\n    })]\n  });\n};\nexport var HomeScreen = function HomeScreen() {\n  var postQuery = trpc.post.all.useQuery();\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    showPost = _React$useState6[0],\n    setShowPost = _React$useState6[1];\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      className: \"h-full w-full p-4\",\n      children: [_jsxs(Text, {\n        className: \"text-5xl font-bold mx-auto pb-2\",\n        children: [\"Create \", _jsx(Text, {\n          className: \"text-indigo-500\",\n          children: \"T3\"\n        }), \" Turbo\"]\n      }), _jsx(View, {\n        className: \"py-2\",\n        children: showPost ? _jsxs(Text, {\n          children: [_jsx(Text, {\n            className: \"font-semibold\",\n            children: \"Selected post:\"\n          }), showPost]\n        }) : _jsx(Text, {\n          className: \"italic font-semibold\",\n          children: \"Press on a post\"\n        })\n      }), _jsx(FlashList, {\n        data: postQuery.data,\n        estimatedItemSize: 20,\n        ItemSeparatorComponent: function ItemSeparatorComponent() {\n          return _jsx(View, {\n            className: \"h-2\"\n          });\n        },\n        renderItem: function renderItem(p) {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setShowPost(p.item.id);\n            },\n            children: _jsx(PostCard, {\n              post: p.item\n            })\n          });\n        }\n      }), _jsx(CreatePost, {})]\n    })\n  });\n};","map":{"version":3,"names":["React","FlashList","trpc","PostCard","post","title","content","CreatePost","utils","useContext","create","useMutation","onSuccess","all","invalidate","mutate","useState","onChangeTitle","onChangeContent","HomeScreen","postQuery","useQuery","showPost","setShowPost","data","p","item","id"],"sources":["/home/admin1/meway/apps/expo/src/screens/home.tsx"],"sourcesContent":["import React from \"react\";\n\nimport {\n  SafeAreaView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\n\nimport { FlashList } from \"@shopify/flash-list\";\nimport type { inferProcedureOutput } from \"@trpc/server\";\nimport type { AppRouter } from \"@acme/api\";\n\nimport { trpc } from \"../utils/trpc\";\n\nconst PostCard: React.FC<{\n  post: inferProcedureOutput<AppRouter[\"post\"][\"all\"]>[number];\n}> = ({ post }) => {\n  return (\n    <View className=\"p-4 border-2 border-gray-500 rounded-lg\">\n      <Text className=\"text-xl font-semibold text-gray-800\">{post.title}</Text>\n      <Text className=\"text-gray-600\">{post.content}</Text>\n    </View>\n  );\n};\n\nconst CreatePost: React.FC = () => {\n  const utils = trpc.useContext();\n  const { mutate } = trpc.post.create.useMutation({\n    async onSuccess() {\n      await utils.post.all.invalidate();\n    },\n  });\n\n  const [title, onChangeTitle] = React.useState(\"\");\n  const [content, onChangeContent] = React.useState(\"\");\n\n  return (\n    <View className=\"p-4 border-t-2 border-gray-500 flex flex-col\">\n      <TextInput\n        className=\"border-2 border-gray-500 rounded p-2 mb-2\"\n        onChangeText={onChangeTitle}\n        placeholder=\"Title\"\n      />\n      <TextInput\n        className=\"border-2 border-gray-500 rounded p-2 mb-2\"\n        onChangeText={onChangeContent}\n        placeholder=\"Content\"\n      />\n      <TouchableOpacity\n        className=\"bg-indigo-500 rounded p-2\"\n        onPress={() => {\n          mutate({\n            title,\n            content,\n          });\n        }}\n      >\n        <Text className=\"text-white font-semibold\">Publish post</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport const HomeScreen = () => {\n  const postQuery = trpc.post.all.useQuery();\n  const [showPost, setShowPost] = React.useState<string | null>(null);\n\n  return (\n    <SafeAreaView>\n      <View className=\"h-full w-full p-4\">\n        <Text className=\"text-5xl font-bold mx-auto pb-2\">\n          Create <Text className=\"text-indigo-500\">T3</Text> Turbo\n        </Text>\n\n        <View className=\"py-2\">\n          {showPost ? (\n            <Text>\n              <Text className=\"font-semibold\">Selected post:</Text>\n              {showPost}\n            </Text>\n          ) : (\n            <Text className=\"italic font-semibold\">Press on a post</Text>\n          )}\n        </View>\n\n        <FlashList\n          data={postQuery.data}\n          estimatedItemSize={20}\n          ItemSeparatorComponent={() => <View className=\"h-2\" />}\n          renderItem={(p) => (\n            <TouchableOpacity onPress={() => setShowPost(p.item.id)}>\n              <PostCard post={p.item} />\n            </TouchableOpacity>\n          )}\n        />\n\n        <CreatePost />\n      </View>\n    </SafeAreaView>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAU1B,SAASC,SAAS,QAAQ,qBAAqB;AAI/C,SAASC,IAAI;AAAwB;AAAA;AAErC,IAAMC,QAEJ,GAAG,SAFCA,QAEJ,OAAiB;EAAA,IAAXC,IAAI,QAAJA,IAAI;EACV,OACE,MAAC,IAAI;IAAC,SAAS,EAAC,yCAAyC;IAAA,WACvD,KAAC,IAAI;MAAC,SAAS,EAAC,qCAAqC;MAAA,UAAEA,IAAI,CAACC;IAAK,EAAQ,EACzE,KAAC,IAAI;MAAC,SAAS,EAAC,eAAe;MAAA,UAAED,IAAI,CAACE;IAAO,EAAQ;EAAA,EAChD;AAEX,CAAC;AAED,IAAMC,UAAoB,GAAG,SAAvBA,UAAoB,GAAS;EACjC,IAAMC,KAAK,GAAGN,IAAI,CAACO,UAAU,EAAE;EAC/B,4BAAmBP,IAAI,CAACE,IAAI,CAACM,MAAM,CAACC,WAAW,CAAC;MACxCC,SAAS;QAAA,gDAAG;UAChB,MAAMJ,KAAK,CAACJ,IAAI,CAACS,GAAG,CAACC,UAAU,EAAE;QACnC,CAAC;QAAA;UAAA;QAAA;QAAA;MAAA;IACH,CAAC,CAAC;IAJMC,MAAM,yBAANA,MAAM;EAMd,sBAA+Bf,KAAK,CAACgB,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA1CX,KAAK;IAAEY,aAAa;EAC3B,uBAAmCjB,KAAK,CAACgB,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA9CV,OAAO;IAAEY,eAAe;EAE/B,OACE,MAAC,IAAI;IAAC,SAAS,EAAC,8CAA8C;IAAA,WAC5D,KAAC,SAAS;MACR,SAAS,EAAC,2CAA2C;MACrD,YAAY,EAAED,aAAc;MAC5B,WAAW,EAAC;IAAO,EACnB,EACF,KAAC,SAAS;MACR,SAAS,EAAC,2CAA2C;MACrD,YAAY,EAAEC,eAAgB;MAC9B,WAAW,EAAC;IAAS,EACrB,EACF,KAAC,gBAAgB;MACf,SAAS,EAAC,2BAA2B;MACrC,OAAO,EAAE,mBAAM;QACbH,MAAM,CAAC;UACLV,KAAK,EAALA,KAAK;UACLC,OAAO,EAAPA;QACF,CAAC,CAAC;MACJ,CAAE;MAAA,UAEF,KAAC,IAAI;QAAC,SAAS,EAAC,0BAA0B;QAAA;MAAA;IAAoB,EAC7C;EAAA,EACd;AAEX,CAAC;AAED,OAAO,IAAMa,UAAU,GAAG,SAAbA,UAAU,GAAS;EAC9B,IAAMC,SAAS,GAAGlB,IAAI,CAACE,IAAI,CAACS,GAAG,CAACQ,QAAQ,EAAE;EAC1C,uBAAgCrB,KAAK,CAACgB,QAAQ,CAAgB,IAAI,CAAC;IAAA;IAA5DM,QAAQ;IAAEC,WAAW;EAE5B,OACE,KAAC,YAAY;IAAA,UACX,MAAC,IAAI;MAAC,SAAS,EAAC,mBAAmB;MAAA,WACjC,MAAC,IAAI;QAAC,SAAS,EAAC,iCAAiC;QAAA,sBACxC,KAAC,IAAI;UAAC,SAAS,EAAC,iBAAiB;UAAA;QAAA,EAAU;MAAA,EAC7C,EAEP,KAAC,IAAI;QAAC,SAAS,EAAC,MAAM;QAAA,UACnBD,QAAQ,GACP,MAAC,IAAI;UAAA,WACH,KAAC,IAAI;YAAC,SAAS,EAAC,eAAe;YAAA;UAAA,EAAsB,EACpDA,QAAQ;QAAA,EACJ,GAEP,KAAC,IAAI;UAAC,SAAS,EAAC,sBAAsB;UAAA;QAAA;MACvC,EACI,EAEP,KAAC,SAAS;QACR,IAAI,EAAEF,SAAS,CAACI,IAAK;QACrB,iBAAiB,EAAE,EAAG;QACtB,sBAAsB,EAAE;UAAA,OAAM,KAAC,IAAI;YAAC,SAAS,EAAC;UAAK,EAAG;QAAA,CAAC;QACvD,UAAU,EAAE,oBAACC,CAAC;UAAA,OACZ,KAAC,gBAAgB;YAAC,OAAO,EAAE;cAAA,OAAMF,WAAW,CAACE,CAAC,CAACC,IAAI,CAACC,EAAE,CAAC;YAAA,CAAC;YAAA,UACtD,KAAC,QAAQ;cAAC,IAAI,EAAEF,CAAC,CAACC;YAAK;UAAG,EACT;QAAA;MACnB,EACF,EAEF,KAAC,UAAU,KAAG;IAAA;EACT,EACM;AAEnB,CAAC"},"metadata":{},"sourceType":"module"}